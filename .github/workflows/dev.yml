permissions:
  contents: read
  id-token: write
on:
  push:
    branches:
      - dev
concurrency:
  group: dev
  cancel-in-progress: false
name: dev
jobs:
  build:
    runs-on: ubuntu-latest
    environment: dev
    env:
      SERVICE: ${{ vars.SERVICE }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      AWS_ACCOUNT: ${{ vars.AWS_ACCOUNT }}
      VERSION: ${{ github.sha }}
      STAGE: dev
    name: build
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.0.300
      - uses: actions/setup-node@v3
        with:
          node-version: 18

      - run: dotnet build ./apps/backend/TodoList.Api
      - run: dotnet test ./apps/backend/TodoList.Api.UnitTests

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ env.AWS_ACCOUNT }}:role/github-actions
          role-duration-seconds: 900
          aws-region: ${{ env.AWS_REGION }}

      - name: deploy ecr
        run: |
          cd cdk
          npm ci
          npx cdk deploy ${{ env.SERVICE }}-${{ env.STAGE }}-ecr --require-approval never

      - name: login ecr
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"

      - name: push ecr
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: ${{ env.SERVICE }}-${{ env.STAGE }}-ecr-webapp-repository
          VERSION: ${{ github.sha }}
        run: |
          docker-compose build
          docker-compose push

      - name: deploy backend
        run: npx cdk deploy ${{ env.SERVICE }}-${{ env.STAGE }}-backend --require-approval never

      # - run: npm run integration
      # - run: npm run e2e
